apiVersion: v1
kind: Namespace
metadata:
  name: volcano-system
  labels:
    kubernetes.io/metadata.name: volcano-system    
---

apiVersion: v1
kind: Namespace
metadata:
  name: volcano-monitoring
  labels:
    kubernetes.io/metadata.name: volcano-monitoring
---
# Source: volcano/templates/admission.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-admission-role
subjects:
  - kind: ServiceAccount
    name: volcano-admission
    namespace: volcano-system
roleRef:
  kind: ClusterRole
  name: volcano-admission
  apiGroup: rbac.authorization.k8s.io
---
# Source: volcano/templates/controllers.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-controllers-role
subjects:
  - kind: ServiceAccount
    name: volcano-controllers
    namespace: volcano-system
roleRef:
  kind: ClusterRole
  name: volcano-controllers
  apiGroup: rbac.authorization.k8s.io
---
# Source: volcano/templates/scheduler.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-scheduler
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs/status"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "bind", "updateStatus", "delete"]
  - apiGroups: [""]
    resources: ["pods/binding"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["list", "watch", "update"]
  - apiGroups: [""]
    resources: ["namespaces", "services", "replicationcontrollers"]
    verbs: ["list", "watch", "get"]
  - apiGroups: [""]
    resources: ["resourcequotas"]
    verbs: ["list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list", "watch","update","patch"]
  - apiGroups: [ "storage.k8s.io" ]
    resources: ["storageclasses", "csinodes", "csidrivers", "csistoragecapacities"]
    verbs: [ "list", "watch" ]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["list", "watch"]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["queues"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["queues/status"]
    verbs: ["update"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups"]
    verbs: ["list", "watch", "update"]
  - apiGroups: ["nodeinfo.volcano.sh"]
    resources: ["numatopologies"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "delete", "update"]
  - apiGroups: ["apps"]
    resources: ["daemonsets", "replicasets", "statefulsets"]
    verbs: ["list", "watch", "get"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "watch"]
---
# Source: volcano/templates/scheduler.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-scheduler-role
subjects:
  - kind: ServiceAccount
    name: volcano-scheduler
    namespace: volcano-system
roleRef:
  kind: ClusterRole
  name: volcano-scheduler
  apiGroup: rbac.authorization.k8s.io
---
# Source: volcano/templates/scheduler.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  name: volcano-scheduler-service
  namespace: volcano-system
  labels:
    app: volcano-scheduler
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: "metrics"
  selector:
    app: volcano-scheduler
  type: ClusterIP
---
# Source: volcano/templates/admission.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-admission
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "create", "update"]
  # Rules below is used generate admission service secret
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "create", "delete"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/approval"]
    verbs: ["create", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "patch"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["queues"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups"]
    verbs: ["get", "list", "watch"]
---
# Source: volcano/templates/controllers.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: volcano-controllers
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "get", "list", "watch", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs/status", "jobs/finalizers"]
    verbs: ["update", "patch"]
  - apiGroups: ["bus.volcano.sh"]
    resources: ["commands"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create", "get", "list", "watch", "update", "bind", "delete", "patch"]
  - apiGroups: [""]
    resources: ["pods/finalizers"]
    verbs: ["update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups", "queues", "queues/status"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: ["flow.volcano.sh"]
    resources: ["jobflows", "jobtemplates"]
    verbs: ["get", "list", "watch", "create", "delete", "update"]
  - apiGroups: [ "flow.volcano.sh" ]
    resources: [ "jobflows/status", "jobs/finalizers","jobtemplates/status", "jobtemplates/finalizers" ]
    verbs: [ "update", "patch" ]
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "create", "delete"]
  - apiGroups: ["apps"]
    resources: ["daemonsets", "statefulsets"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "watch"]
--- 
---

# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: volcano-admission-service-pods-mutate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /pods/mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: mutatepod.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: volcano-admission-service-queues-mutate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /queues/mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: mutatequeue.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - scheduling.volcano.sh
        apiVersions:
          - v1beta1
        operations:
          - CREATE
        resources:
          - queues
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: volcano-admission-service-podgroups-mutate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /podgroups/mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: mutatepodgroup.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - scheduling.volcano.sh
        apiVersions:
          - v1beta1
        operations:
          - CREATE
        resources:
          - podgroups
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: volcano-admission-service-jobs-mutate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /jobs/mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: mutatejob.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
      - apiGroups:
          - batch.volcano.sh
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - jobs
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
    
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: volcano-admission-service-jobs-validate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /jobs/validate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validatejob.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    rules:
      - apiGroups:
          - batch.volcano.sh
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobs
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: volcano-admission-service-pods-validate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /pods/validate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validatepod.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
# Source: volcano/templates/webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: volcano-admission-service-queues-validate
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: volcano-admission-service
        namespace: volcano-system
        path: /queues/validate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validatequeue.volcano.sh
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - volcano-system
            - kube-system
    objectSelector: {}
    rules:
      - apiGroups:
          - scheduling.volcano.sh
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - queues
        scope: '*'
    sideEffects: NoneOnDryRun
    timeoutSeconds: 10
---
